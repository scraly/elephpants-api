// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server that handle cute Elephpants.",
    "title": "elephpants-api",
    "version": "0.1.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/elephpant": {
      "get": {
        "description": "Get a elephpant by a given name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Gopher name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A elephpant",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "A elephpant with the specified Name was not found.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a elephpant",
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "description": "The elephpant to update.",
            "name": "elephpant",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "displayname",
                "url"
              ],
              "properties": {
                "displayname": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            }
          },
          "404": {
            "description": "A elephpant with the specified Name was not found."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "summary": "Add a new Gopher",
        "parameters": [
          {
            "description": "The Gopher to create.",
            "name": "elephpant",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "displayname",
                "url"
              ],
              "properties": {
                "displayname": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            }
          },
          "409": {
            "description": "Gopher already exists"
          }
        }
      },
      "delete": {
        "description": "Delete a elephpant by a given name",
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Elephpant name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "A elephpant with the specified Name was not found."
          }
        }
      }
    },
    "/elephpants": {
      "get": {
        "description": "List Gophers",
        "produces": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "responses": {
          "200": {
            "description": "Return the Gophers list.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Elephpant"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "Check Health",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "elephpants"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Elephpant": {
      "type": "object",
      "properties": {
        "displayname": {
          "type": "string",
          "example": "My elephpant"
        },
        "name": {
          "type": "string",
          "example": "my-elephpant"
        },
        "url": {
          "type": "string",
          "example": "https://raw.githubusercontent.com/scraly/elephpants/main/ElePHPant.png"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Handle Elephpants",
      "name": "elephpants"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "HTTP server that handle cute Elephpants.",
    "title": "elephpants-api",
    "version": "0.1.0"
  },
  "host": "localhost:8080",
  "paths": {
    "/elephpant": {
      "get": {
        "description": "Get a elephpant by a given name",
        "produces": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Gopher name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A elephpant",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "404": {
            "description": "A elephpant with the specified Name was not found.",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a elephpant",
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "description": "The elephpant to update.",
            "name": "elephpant",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "displayname",
                "url"
              ],
              "properties": {
                "displayname": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            }
          },
          "404": {
            "description": "A elephpant with the specified Name was not found."
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "summary": "Add a new Gopher",
        "parameters": [
          {
            "description": "The Gopher to create.",
            "name": "elephpant",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "displayname",
                "url"
              ],
              "properties": {
                "displayname": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/Elephpant"
            }
          },
          "409": {
            "description": "Gopher already exists"
          }
        }
      },
      "delete": {
        "description": "Delete a elephpant by a given name",
        "tags": [
          "elephpants"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Elephpant name",
            "name": "name",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "A elephpant with the specified Name was not found."
          }
        }
      }
    },
    "/elephpants": {
      "get": {
        "description": "List Gophers",
        "produces": [
          "application/json"
        ],
        "tags": [
          "elephpants"
        ],
        "responses": {
          "200": {
            "description": "Return the Gophers list.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Elephpant"
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "description": "Check Health",
        "produces": [
          "text/plain"
        ],
        "tags": [
          "elephpants"
        ],
        "operationId": "checkHealth",
        "responses": {
          "200": {
            "description": "OK message.",
            "schema": {
              "type": "string",
              "enum": [
                "OK"
              ]
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Elephpant": {
      "type": "object",
      "properties": {
        "displayname": {
          "type": "string",
          "example": "My elephpant"
        },
        "name": {
          "type": "string",
          "example": "my-elephpant"
        },
        "url": {
          "type": "string",
          "example": "https://raw.githubusercontent.com/scraly/elephpants/main/ElePHPant.png"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Handle Elephpants",
      "name": "elephpants"
    }
  ]
}`))
}
