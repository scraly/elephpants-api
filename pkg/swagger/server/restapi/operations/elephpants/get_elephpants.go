// Code generated by go-swagger; DO NOT EDIT.

package elephpants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetElephpantsHandlerFunc turns a function with the right signature into a get elephpants handler
type GetElephpantsHandlerFunc func(GetElephpantsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetElephpantsHandlerFunc) Handle(params GetElephpantsParams) middleware.Responder {
	return fn(params)
}

// GetElephpantsHandler interface for that can handle valid get elephpants params
type GetElephpantsHandler interface {
	Handle(GetElephpantsParams) middleware.Responder
}

// NewGetElephpants creates a new http.Handler for the get elephpants operation
func NewGetElephpants(ctx *middleware.Context, handler GetElephpantsHandler) *GetElephpants {
	return &GetElephpants{Context: ctx, Handler: handler}
}

/*
	GetElephpants swagger:route GET /elephpants elephpants getElephpants

List Gophers
*/
type GetElephpants struct {
	Context *middleware.Context
	Handler GetElephpantsHandler
}

func (o *GetElephpants) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetElephpantsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
