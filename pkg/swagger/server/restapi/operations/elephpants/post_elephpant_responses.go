// Code generated by go-swagger; DO NOT EDIT.

package elephpants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/scraly/elephpants-api/pkg/swagger/server/models"
)

// PostElephpantCreatedCode is the HTTP code returned for type PostElephpantCreated
const PostElephpantCreatedCode int = 201

/*
PostElephpantCreated Created

swagger:response postElephpantCreated
*/
type PostElephpantCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Elephpant `json:"body,omitempty"`
}

// NewPostElephpantCreated creates PostElephpantCreated with default headers values
func NewPostElephpantCreated() *PostElephpantCreated {

	return &PostElephpantCreated{}
}

// WithPayload adds the payload to the post elephpant created response
func (o *PostElephpantCreated) WithPayload(payload *models.Elephpant) *PostElephpantCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post elephpant created response
func (o *PostElephpantCreated) SetPayload(payload *models.Elephpant) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostElephpantCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostElephpantConflictCode is the HTTP code returned for type PostElephpantConflict
const PostElephpantConflictCode int = 409

/*
PostElephpantConflict Gopher already exists

swagger:response postElephpantConflict
*/
type PostElephpantConflict struct {
}

// NewPostElephpantConflict creates PostElephpantConflict with default headers values
func NewPostElephpantConflict() *PostElephpantConflict {

	return &PostElephpantConflict{}
}

// WriteResponse to the client
func (o *PostElephpantConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
