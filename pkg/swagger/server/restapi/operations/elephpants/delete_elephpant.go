// Code generated by go-swagger; DO NOT EDIT.

package elephpants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteElephpantHandlerFunc turns a function with the right signature into a delete elephpant handler
type DeleteElephpantHandlerFunc func(DeleteElephpantParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteElephpantHandlerFunc) Handle(params DeleteElephpantParams) middleware.Responder {
	return fn(params)
}

// DeleteElephpantHandler interface for that can handle valid delete elephpant params
type DeleteElephpantHandler interface {
	Handle(DeleteElephpantParams) middleware.Responder
}

// NewDeleteElephpant creates a new http.Handler for the delete elephpant operation
func NewDeleteElephpant(ctx *middleware.Context, handler DeleteElephpantHandler) *DeleteElephpant {
	return &DeleteElephpant{Context: ctx, Handler: handler}
}

/*
	DeleteElephpant swagger:route DELETE /elephpant elephpants deleteElephpant

Delete a elephpant by a given name
*/
type DeleteElephpant struct {
	Context *middleware.Context
	Handler DeleteElephpantHandler
}

func (o *DeleteElephpant) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteElephpantParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
